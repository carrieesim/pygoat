name: Generate, Sign, and Commit SBOM

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  generate-and-sign-sbom:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write

    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # IMPORTANT: full git history for proper pull/rebase

      - name: Install Syft
        run: |
          SYFT_VERSION="1.28.0"
          curl -sSfL https://github.com/anchore/syft/releases/download/v${SYFT_VERSION}/syft_${SYFT_VERSION}_linux_amd64.tar.gz | tar -xz
          sudo mv syft /usr/local/bin/
          syft version

      - name: Generate SBOM in SPDX JSON format
        run: |
          syft dir:. -o spdx-json --file log4shell-vulnerable-app-spdx.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: SBOM
          path: log4shell-vulnerable-app-spdx.json

      - name: Install Cosign
        run: |
          COSIGN_VERSION="v2.2.3"
          wget https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Sign SBOM
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign sign-blob --yes --oidc-issuer="https://token.actions.githubusercontent.com" \
            --output-certificate log4shell-vulnerable-app-spdx.pem \
            log4shell-vulnerable-app-spdx.json
      
      - name: Commit SBOM and signature
        run: |
          git config --local user.email "simlixincarrie02@gmail.com"
          git config --local user.name "carrieesim"
          git add log4shell-vulnerable-app-spdx.json log4shell-vulnerable-app-spdx.pem
          git diff --cached --quiet || git commit -m "Add and sign SBOM"
          git pull --rebase origin master
          git push origin master

  vulnerability-analysis:
    needs: generate-and-sign-sbom
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download SBOM artifact
        uses: actions/download-artifact@v4
        with:
          name: SBOM

      - name: Install Grype
        run: |
          GRYPE_VERSION="0.88.0"
          curl -sSfL https://github.com/anchore/grype/releases/download/v${GRYPE_VERSION}/grype_${GRYPE_VERSION}_linux_amd64.tar.gz | tar -xz
          sudo mv grype /usr/local/bin/
          grype version

      - name: Validate SBOM JSON
        run: |
          head -40 log4shell-vulnerable-app-spdx.json
          jq empty log4shell-vulnerable-app-spdx.json

      - name: Run vulnerability analysis with JSON output
        id: grype_scan
        run: |
          grype sbom:log4shell-vulnerable-app-spdx.json -o json > grype_results.json
          VULN_COUNT=$(jq '.matches | length' grype_results.json)
          echo "Vulnerability count: $VULN_COUNT"
          echo "vuln_count=$VULN_COUNT" >> $GITHUB_OUTPUT

      - name: Notify Teams via Power Automate
        if: ${{ steps.grype_scan.outputs.vuln_count != '0' }}
        run: |
          VULN_COUNT=$(jq '.matches | length' grype_results.json)
          cat <<EOF > card.json
{
  "\$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
  "type": "AdaptiveCard",
  "version": "1.4",
  "body": [
    {
      "type": "TextBlock",
      "text": "ðŸš¨ Vulnerability Detected in SBOM",
      "weight": "Bolder",
      "size": "Medium",
      "color": "Attention"
    },
    {
      "type": "TextBlock",
      "text": "A total of ${VULN_COUNT} vulnerabilities were detected during SBOM scanning.",
      "wrap": true
    },
    {
      "type": "TextBlock",
      "text": "**Repository**: ${GITHUB_REPOSITORY}",
      "wrap": true
    },
    {
      "type": "TextBlock",
      "text": "**Branch**: ${GITHUB_REF_NAME}",
      "wrap": true
    },
    {
      "type": "TextBlock",
      "text": "**Commit SHA**: ${GITHUB_SHA}",
      "wrap": true
    },
    {
      "type": "TextBlock",
      "text": "ðŸ”— [View Workflow Logs](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID})",
      "wrap": true
    }
  ]
}
EOF
          curl -X POST -H "Content-Type: application/json" \
            -d @card.json \
            "${{ secrets.TEAMS_WEBHOOK }}"
